- structured like a model armature
- can indent to look like it

structure:

<html>
	<head>
		<title>
		other
	<head>

	<body>
		<h1>
		<p>
		<p>
	<body>
>html>

- there can be muliple bodies
- quotes not required but recommended

in the <html> element you can get the lanuage so:
	<html lang="en"> or for country: <html lang="en-US">

paragraphs are <p>
	- paragraphs will always be the same size regarless of heading above
	- they have a style atribute for color, font, etc
	- paragraphs done need a heading
	- have a title atribute, a little bit of extra when the mouse is hovering over it

- there can only be 6 headings (<h1> through <h6>)
	- they get smaller as the number increases
	- can change the font size with the style atribute:
		- style="font-size:60px;"

- link are <a href="link">This is a link</a>
	- makes the text "this is a link" a hyperlink
	- the "href" sets the link, like a class atribute

- images are <img src="fileName" alt="link(site, idk)" width="string number" height="string number">
	- src is an atribute that defines the image
	- these can be reletive or absolute urls
	
	- alt specifies what text will be in place if the image doesnt exist
	- use float atribute to tell it where to float on text, value can be left or right
	
	if image is clickable can define which areas are clickable
		use the <map> tag
		ex:
		<img src="workplace.jpg" alt="Workplace" usemap="#workmap">

		<map name="workmap">
  			<area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.htm">
  			<area shape="rect" coords="290,172,333,250" alt="Phone" href="phone.htm">
  			<area shape="circle" coords="337,300,44" alt="Coffee" href="coffee.htm">
		</map>

- use the <hr> element to add basically a hormzontal line
- use the <br> to break the link, so: 
	- <p> this line <br> breaks</p>
- use the <pre> element to preserve lines and white space

-font changing:
	use style
	font-family, font type
	font-size, size
	text-align

element formating:
	<b> - Bold text
	<strong> - Important text
	<i> - Italic text
	<em> - Emphasized text
	<mark> - Marked text
	<small> - Smaller text
	<del> - Deleted text (strick though)
	<ins> - Inserted text
	<sub> - Subscript text
	<sup> - Superscript text

quotes:
	<blockquote> for large quotes (paragraphs)
	<q> for short quotes (sentences)
	<abbr> abriviates text to other text, ex: <p>The <abbr title="World Health Organization">WHO</abbr> was founded in 1948.</p>
	<address> for contact info ono the author, automatically adds line break
	<cite> does author, then name, ex: <p><cite>The Scream</cite> by Edvard Munch. Painted in 1893.</p>
	<bdo> have an atribute for direction called <dir>, defines the direction of the text "rtl" means right to left, opposite of normal ex: <bdo dir="rtl">This text will be written from right to left</bdo>

comment are done with <!-- "comment" -->

intergrating css:
	Inline - by using the style attribute inside HTML elements
		what ive already done <h1 style="background-color:black;">heading</h1>
	Internal - by using a <style> element in the <head> section
		defines the css style for the whole html page:
		
		<style>
		body {background-color: powderblue;}
		h1   {color: blue;}
		p    {color: red;}
		</style>

	External - by using a <link> element to link to an external CSS file
	link to another css file to formate the whole page
	can be written like a json file like:

		body {
  			background-color: powderblue;
		}
		h1 {
  			color: blue;
		}
		p {
  			color: red;
		}

	to intergrate it:
	<head>
		<link rel="stylesheet" href="styles.css">
	</head>

css elements:
	border:
		makes box around text
	padding:
		set how much space there is between border and text
	margin:
		set the space from border to text, (moves text right)
opening links:
	The target attribute can have one of the following values:

		_self - Default. Opens the document in the same window/tab as it was clicked
		_blank - Opens the document in a new window or tab
		_parent - Opens the document in the parent frame
		_top - Opens the document in the full body of the window
		ex: <a href="https://www.w3schools.com/" target="_blank">Visit W3Schools!</a>

		to use image as link just put the <img> tag inside the <a> tag
	link to email:
		Use mailto: inside the href attribute to create a link that opens the user's email program (to let them send a new email)
		EX:<a href="cooperjbower@gmail.com">Send email</a>

	use button as link:
		you have to use java to determin what happens when th button is clicked
		ex: <button onclick="document.location='default.asp'">HTML Tutorial</button>

	the title atribute is a tooltip that shows when hovering over it
	can use css to give it color

creaing bookmarks(not the normal browser ones):
	use the id atribute to create it (creates almost a variable name for the heading, paragraph, etc)
	then use the href atribute and the name to get to it, ex: <a href="#C4">Jump to Chapter 4</a>, to get to it

using the<script> tag you can use jave to make functions, and call them onClick

can set background images for paragrps or headers with style="background-image:(url "link to image");"
images will reapeate if to small, use bakground:"no-repeat"
to cover all of it use, background-size: cover, setting it to 100% 100% will stretch
also set the background-attachment to fixed

picture element:
	holds different images
	can set the different images to show depending other atributes

add icon:
	add the <link> tag after the <title> tag
	should be like rel="reletive path" type="image/x-icon" href="path to file" 

tables:
	each cell is definined as <td> (stands for table data)
	each cell can hold all html elements(text, images, list, links, etc.)
	each row is defined with <tr> (stands for table row)

	example:

<table>
	<tr>
		<td>element1</td>
		<td>element2</td>
	</tr>
	<tr>
		<td>element1</td>
		<td>element2</td>
	</tr>
</table>
		

	they can also have headers defined with <th>
	they are similar to the cell just bolded I think
	you can have them be vertical based on the which table row its in
	use the css "text-align" atribute to align the text inside

	you can add borders to individual cells using the css atribute "border" (border: 1px solid black;) borders not there by default
	to NOT have double borders, use the css atribute "border-collapse" and set it to "collapse"

	to set the color is each cell use the css atribute "background-color"
	use the "border-radius" to make rounded edjes(will only make tag that is used rounded, not whole table)

	border style, use the border-style atribute
		values:
			dotted     
			dashed     
			solid    
			double     
			groove     
			ridge     
			inset     
			outset     
			none     
			hidden
	use the css atreibute "border-color" to change the color

	to change the width of the table use the HTML atribute "style" to set the width using css
	can use this with individual headers to better customize
	
	use the css "height" atribute to change the height like similar to the "width" atribute

	use the <caption> tag to add a title to the center of the table
	use the css atribute "padding" to add space between edjes
		can define further for which edje to do it with "padding-left" and others
	use css atribute"border-spacing" atribute to add space between cell(default is 2px)

	you can make cell go over mulitple rows with the HTML atribute colspan and setting it to an integer(there is also rowspan)

	to add styles to every other row use the HTML method nth-child(odd or even) and define what to do in curly brackets can use this for coloms and rows

	use the HTML atribute "hover" to set the color of the row or column to a different color

	use the colground and rowground, and set it to an integer to make all cell in that row of colume to a color or style

list:
	the list starts with <ul> (unordered)
	an ordered list starts with <ol>
	each element starts with <li>

	add a discription list to a list with <dl> (basically like bullet points)
	<dt> is the first think of it
	<dd> is the bullets of the list
	
	unordered:
	can change the way the bullets look with the HTML atribute "style" and setting it to a css atribute "list-style-type"
		types:
			disc
			circle
			square
			none
	
	lists can be placed inside of other list to make another set of bullets

	ordered:
	use the HTML atibute "type" to set how the bullets are being made
		types:
			type="1"	The list items will be numbered with numbers (default)
			type="A"	The list items will be numbered with uppercase letters
			type="a"	The list items will be numbered with lowercase letters
			type="I"	The list items will be numbered with uppercase roman numbers
			type="i"	The list items will be numbered with lowercase roman numbers
	can define where the bullet starts with the HTML atribute "start"
	
		
	
block levels:
	block level can define sections to the html
	
	the common ones are <p> and <div>
	<p> defines a paragraph
	<div> defines a divided or section of the html

	all the blocks:
		<address>
		<article>
		<aside>
		<blockquote>
		<canvas>
		<dd><div>
		<dl>
		<dt>
		<fieldset>
		<figcaption>
		<figure>
		<footer>
		<form>
		<h1>-<h6>
		<header>
		<hr>
		<li>
		<main>
		<nav>
		<noscript>
		<ol>
		<p>
		<pre>
		<section>
		<table>
		<tfoot>
		<ul>
		<video>
	
inline elements:
	they do not create new lines, they only take up the width nessisary
	all the in line elements:
		<a>
		<abbr>
		<acronym>
		<b>
		<bdo>
		<big>
		<br>
		<button>
		<cite>
		<code>
		<dfn>
		<em>
		<i>
		<img>
		<input>
		<kbd>
		<label>
		<map>
		<object>
		<output>
		<q>
		<samp>
		<script>
		<select>
		<small>
		<span>
		<strong>
		<sub>
		<sup>
		<textarea>
		<time>
		<tt>
		<var>

classes:
	classes are used to section off the html code so that css can accese only that part of it or so that javascript can minipulate it only
	all you do is the block with class=className after it. then use css to get it using .className{atributes}
	to use javascript with it use you could use the document.getElementByClassName("className") to get all of them.
	you can make an elemtn have multple classes use do class=name1 name2
ids:
	can make tag and elements have an id with id="idName"
	you call it with css using #idName

iframes:
	syntax: <iframe src="url" title="description"></iframe>
	you can use the HTML atributes height and width to specify the size
	you can get rid of the border using the style atribute and the css border atribute
	when you use href to put a link it will make the table show the link use src

javascript:
	use the <script> tag to define what parts are a script
	you can use it ti change the style like an atribute of a class

	use the <nonscript> tag to display something if the browser doesn support javascript

head:
	it is for data without data, and is placed between <html> and <body>
	it also holds stuff that the html needs like the <title> tag
	the <style> element describes the look of all the html
	the <link> element is used to link to an external fine 
	the <meta> element is used ot show the character set, the description, author, and other
		this is used to make the view look correct even when on a phone, use: <meta name="viewport" content="width=device-width, initial-scale=1.0">
	the <base> element defines the base url that all the other will go off of.

layout:
	there are four main way to layout the html using css those being:
		CSS framework
			use w3.css or bootstrap
		CSS float property
			easy and all you need is the float and clear properties, however elemets are tied to it so it may harm flexability
		CSS flexbox
			it is easily predicable where the elemetns will go and it scales to the screen size
		CSS grid
			uses grids to formate stuff, more like a table

responive web pages:
	they scale and change based on the device or screen size
	you set this in the <meta>, go above to see example

	with images you set the scale in css to 100% to make it scale to the screen size
	to show different images based on sceens size use the "media="(max-width: 600px)"" to do it and chagen the max to min or the value to change it
	you can set text size with vw instead of px to make it scale based on screen size

	you can also scale media to so that you can always see the media on the screen(i think ads use this a lot)

comutercode:
	use <kbd> to get keyboard input
	the <samp> tag will define output from the program
	the <code> is where you put small bits of code, this is also showed on the screen to preserve whitespace use the <pre> tag around it
	to accses the vaiables in the <code> part use the <var> tag followed by the variable name to get it.
	
user input:
	use the <form> tag to get user input
		this can get different types of information from the user
	use the <input> to get also get it, this is the most used, you can define different types for different thinks, like radio, text, button(the radio types is like a mulitple choice
	checkbox type is like radio but muliple
	the submit type sents the data input to another file to handle it
	the <label> tag is always there inside the input and form tag
		notice the use of the <label> element in the example above.
		The <label> tag defines a label for many form elements.
		The <label> element is useful for screen-reader users, because the screen-reader will read out loud the label when the user focus on the input element.
		The <label> element also help users who have difficulty clicking on very small regions (such as radio buttons or checkboxes) - because when the user clicks the text within the <label> element, it toggles the radio button/checkbox.
		The for attribute of the <label> tag should be equal to the id attribute of the <input> element to bind them together.

	the action atribute can be added to the form part so that it has a place to submit when sent
	he target atribute tells where to display like a new window or somewhere else
	the methed atribute tell how to send it, with get or post, get is which url variables(not for passwords), and post is with post HTTP transactions
	autocomplte will let the browser automaically put stuff in if they already have
	the Novalidate atribute is a true or false and tells if input data should be validated or not

form elements:
	<input> simple text box that is small not means for name or something
	<label> for muliple choice one answer stuff
	<select> gives a dropdown menu, define options with option then value=name
	<option> is like select but with an option already filled in
	<textarea> for longer texxt boxes like paragraphs
	<button> a button
	<fieldset> and <legend> groups together input fields
	<datalist> like select (cana find much of a difference)
	<output> a slider to repusent a number value, doesnt work on old MS edje
	
